# -*- coding: utf-8 -*-
#
# Cookbook Name:: elite
# Spec:: dotfiles
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'chefspec'
require 'chefspec/berkshelf'

describe 'elite::dotfiles' do
  let(:subject) do
    ChefSpec::SoloRunner.new(platform: 'debian',
                             version: '8.0',
                             step_into: 'elite_dotfiles') do |node|
      node.override['elite']['groups'] = %w(elite)
      node.override['elite']['users'] = %w(sliim)
      node.override['elite']['sliim'] = {
        'dotfd' => '/home/sliim/.stuff',
        'email' => 'sliim@spec',
        'shell' => '/bin/bash',
        'group' => 'elite',
        'groups' => %w(elite),
        'password' => nil,
        'dotfiles' => {
          'init_repo' => true,
          'ignore' => %w(foo bar baz),
          'cookbook' => 'elite',
          'source' => 'list2file.erb',
          'mode' => '0644',
        },
      }
    end.converge(described_recipe)
  end

  it 'includes recipe[elite::default]' do
    expect(subject).to include_recipe('elite::default')
  end

  it 'creates elite_dotfiles[sliim]' do
    expect(subject).to create_elite_dotfiles('sliim')
      .with(cookbook: 'elite',
            source: 'list2file.erb',
            mode: '0644',
            init_repo: true,
            ignore: %w(foo bar baz))
  end

  it 'creates directory[/home/sliim/.stuff]' do
    expect(subject).to create_directory('/home/sliim/.stuff')
      .with(owner: 'sliim',
            group: 'elite',
            mode: '0750',
            recursive: true)
  end

  context 'without dotfd' do
    let(:subject) do
      ChefSpec::SoloRunner.new(platform: 'debian',
                               version: '8.0',
                               step_into: 'elite_dotfiles') do |node|
        node.override['elite']['groups'] = %w(elite)
        node.override['elite']['users'] = %w(sliim)
        node.override['elite']['sliim'] = {
          'group' => 'elite',
          'shell' => '/bin/bash',
          'groups' => %w(elite),
          'password' => nil,
        }
      end.converge(described_recipe)
    end

    it 'creates directory[/home/sliim/.dotfiles]' do
      expect(subject).to create_directory('/home/sliim/.dotfiles')
        .with(owner: 'sliim',
              group: 'elite',
              mode: '0750',
              recursive: true)
    end
  end

  it 'runs execute[git init]' do
    expect(subject).to run_execute('git init')
      .with(cwd: '/home/sliim/.stuff',
            user: 'sliim',
            group: 'elite')
  end

  it 'runs execute[git config user.name \'Sliim\']' do
    expect(subject).to run_execute('git config user.name \'Sliim\'')
      .with(cwd: '/home/sliim/.stuff',
            user: 'sliim',
            group: 'elite')
  end

  it 'runs execute[git config user.email \'sliim@spec\']' do
    expect(subject).to run_execute('git config user.email \'sliim@spec\'')
      .with(cwd: '/home/sliim/.stuff',
            user: 'sliim',
            group: 'elite')
  end

  it 'creates template[/home/sliim/.stuff/.gitignore]' do
    config_file = '/home/sliim/.stuff/.gitignore'
    matches = [start_with('# Generated by Chef!'),
               /^foo$/,
               /^bar$/,
               /^baz$/]

    expect(subject).to create_template(config_file)
      .with(owner: 'sliim',
            group: 'elite',
            mode: '0644',
            source: 'list2file.erb',
            cookbook: 'elite')

    matches.each do |m|
      expect(subject).to render_file(config_file).with_content(m)
    end
  end

  context 'without init_repo' do
    let(:subject) do
      ChefSpec::SoloRunner.new(platform: 'debian',
                               version: '8.0',
                               step_into: 'elite_dotfiles') do |node|
        node.override['elite']['groups'] = %w(elite)
        node.override['elite']['users'] = %w(sliim)
        node.override['elite']['sliim'] = {
          'group' => 'elite',
          'shell' => '/bin/bash',
          'groups' => %w(elite),
          'password' => nil,
          'dotfiles' => {
            'init_repo' => false,
            'ignore' => %w(foo bar baz),
            'cookbook' => 'elite',
            'source' => 'list2file.erb',
            'mode' => '0644',
          },
        }
      end.converge(described_recipe)
    end

    it 'does not run execute[git init]' do
      expect(subject).to_not run_execute('git init')
    end

    it 'does not run execute[git config user.name \'Sliim\']' do
      expect(subject).to_not run_execute('git config user.name \'Sliim\'')
    end

    it 'does not run execute[git config user.email \'sliim@mailoo.org\']' do
      expect(subject).to_not run_execute('git config user.email \'sliim@mailoo.org\'')
    end

    it 'does not create cookbook_file[/home/sliim/.dotfiles/.gitignore]' do
      expect(subject).to_not create_cookbook_file('/home/sliim/.dotfiles/.gitignore')
    end
  end
end
