# -*- coding: utf-8 -*-
#
# Cookbook Name:: elite
# Spec:: pentestenv
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require_relative 'spec_helper'

describe 'elite::pentestenv' do
  let(:subject) do
    ChefSpec::SoloRunner.new(step_into: ['elite_pentestenv'],
                             platform: 'debian',
                             version: '8.0') do |node|
      node.override['elite']['users'] = %w(sliim foo)
      node.override['elite']['groups'] = %w(elite)
      node.override['elite']['sliim']['dotfd'] = '/home/sliim/.dotfiles'
      node.override['elite']['sliim']['home'] = '/home/sliim'
      node.override['elite']['sliim']['group'] = 'elite'
      node.override['elite']['sliim']['pentestenv']['cookbook'] = 'elite'
      node.override['elite']['sliim']['pentestenv']['source'] = 'hash2yaml.erb'
      node.override['elite']['sliim']['pentestenv']['repository'] = 'https://remote/pentestenv.git'
      node.override['elite']['sliim']['pentestenv']['reference'] = 'mybranch'
      node.override['elite']['sliim']['pentestenv']['path'] = '/tmp/pe'
      node.override['elite']['sliim']['pentestenv']['config']['instances'] = %w(kali nsa)
      node.override['elite']['sliim']['pentestenv']['config']['targets'] = %w(metasploitable4)
      node.override['elite']['sliim']['pentestenv']['config']['kali']['vbox']['customize']['memory'] = 4096
    end.converge(described_recipe)
  end

  it 'creates elite_pentestenv[sliim]' do
    expect(subject).to create_elite_pentestenv('sliim')
      .with(cookbook: 'elite',
            source: 'hash2yaml.erb',
            repository: 'https://remote/pentestenv.git',
            reference: 'mybranch',
            path: '/tmp/pe',
            config: { 'instances' => %w(kali nsa), 'targets' => %w(metasploitable4),
                      'kali' => { 'vbox' => { 'customize' => { 'memory' => 4096 } } } })
  end

  it 'syncs git[/tmp/pe]' do
    expect(subject).to sync_git('/tmp/pe')
      .with(user: 'root',
            group: 'root',
            repository: 'https://remote/pentestenv.git',
            reference: 'mybranch')
  end

  it 'creates template[/home/sliim/.dotfiles/pentestrc]' do
    config_file = '/home/sliim/.dotfiles/pentestrc'
    matches = [start_with('# Generated by Chef!'),
               /^---\ninstances:\n- kali\n- nsa\n/,
               /^targets:\n\- metasploitable4\n/,
               /^kali:\n\s+vbox:\n\s+customize:\n\s+memory: 4096\n/]

    expect(subject).to create_template(config_file)
      .with(owner: 'sliim',
            group: 'elite',
            cookbook: 'elite',
            source: 'hash2yaml.erb')

    matches.each do |m|
      expect(subject).to render_file(config_file).with_content(m)
    end
  end

  it 'creates elite_dotlink[sliim-pentestrc]' do
    expect(subject).to create_elite_dotlink('sliim-pentestrc')
      .with(owner: 'sliim',
            file: 'pentestrc')
  end
end
