;; Generated by Chef! Do not edit, your changes will be overriden!
;;
;; Cookbook:: elite
;; Provider:: stumpwm_module
;; Module:: autosplit

;; Note: Set *new-frame-action* to :empty

(defvar *autosplit-enabled* t
  "Enable autosplit.")

(defvar *autounsplit-enabled* t
  "Enable autounsplit.")

(defvar *autosplit-backlist-win-class* "gcr-prompter|Gcr-prompter"
  "List of windows classes to blacklist for autosplit.")

(defvar *autosplit-backlist-win-title* "NoAutoSplit"
  "List of windows titles to blacklist for autosplit.")

(defvar *autosplit-backlist-groups* "no-auto-split"
  "List of groups to blacklist for autosplit.")

(defun autosplit ()
  (when (< 1 (length (frame-windows (current-group) (tile-group-current-frame (current-group)))))
    (if (< (frame-height (window-frame (current-window)))
           (frame-width (window-frame (current-window))))
        (hsplit)
      (vsplit))
    (balance-frames)))

(defun unsplit ()
  (when (and (= 0 (length (frame-windows (current-group) (tile-group-current-frame (current-group)))))
             (> (length (head-frames (current-group) (current-head))) 1))
    (remove-split)))

(defun split-on-new-window (window)
  (unless (or (not *autosplit-enabled*)
              (typep (current-group) 'float-group)
              (window-transient-p window)
              (window-modal-p window)
              (window-matches-properties-p window :class *autosplit-backlist-win-class*)
              (window-matches-properties-p window :title *autosplit-backlist-win-title*)
              (string-match *autosplit-backlist-groups* (group-name (current-group))))
    (autosplit)
    (fnext)
    (pull-window window)
    (group-focus-window (window-group window) window)))

(defun unsplit-on-window-destroy (window)
  (unless (or (not *autounsplit-enabled*)
              (typep (current-group) 'float-group))
    (unsplit)))

(defcommand enable-autosplit () ()
  (setq *autosplit-enabled* t)
  (message "Autosplit enabled."))

(defcommand disable-autosplit () ()
  (setq *autosplit-enabled* nil)
  (message "Autosplit disabled."))

(defcommand enable-autounsplit () ()
  (setq *autounsplit-enabled* t)
  (message "Auto unsplit enabled."))

(defcommand disable-autounsplit () ()
  (setq *autounsplit-enabled* nil)
  (message "Auto unsplit disabled."))

(defcommand toggle-autosplit () ()
  (if *autosplit-enabled*
      (disable-autosplit)
    (enable-autosplit)))

(defcommand toggle-autounsplit () ()
  (if *autounsplit-enabled*
      (disable-autounsplit)
    (enable-autounsplit)))

(add-hook *new-window-hook* 'split-on-new-window)
(add-hook *destroy-window-hook* 'unsplit-on-window-destroy)
